openapi: 3.0.0
info:
  title: Resume API
  description: Operations to manage your Resume Web Application
  version: 1.0.0
tags:
  - name: Experiences
    description: |
      Operations to manage experiences.
  - name: Endorsements 
    description: |
      Operations to manage endorsements.
x-amazon-apigateway-cors:
  allowOrigins:
    - '*'
  allowMethods:
    - GET
    - POST
  allowHeaders:
    - authorization
    - content-type
  maxAge: 3600

paths:
  /experiences:
    post:
      summary: Add a new experience
      description: Create a new experience with any details you like. This will return an id
      tags:
        - Experiences
      responses:
        201:
          $ref: '#/components/responses/Created'
        500:
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExperienceModel'
    get:
      summary: Get all available experience entries
      description: Retrieves all experiences available
      tags:
        - Experiences
      responses:
        200:
          description: The request succeeded and all available experiences are included in the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperienceListModel'

  /experiences/{experienceId}:
    parameters:
      - $ref: '#/components/parameters/experienceId'
    get:
      summary: Get Experience details
      description: Returns all the details for an experience with the provided id
      tags:
        - Experiences
      responses:
        200:
          description: The request succeeded and the experience is included in the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperienceModel'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'

components:
  parameters:
    experienceId:
      name: experienceId
      in: path
      description: Identifier for an experience
      required: true
      example: 2umzGoDfBfPveMsTahhQxS
      schema:
        type: string

  schemas:
    ExperienceModel:
      type: object
      required:
        - name
      properties:
        id:
          type: string
        name:
          type: string
        role:
          type: string
        description:
          type: string
        startDate:
          type: string
        endDate:
          type: string
      example: 
        id: 2umzGoDfBfPveMsTahhQxS
        name: Florida International University
        role: Student
        description: Computer Engineer student focused on software development
        startDate: 07/01/2012
        endDate: 08/01/2014
        
    ExperienceListModel:
      type: array
      items:
        $ref: '#/components/schemas/ExperienceModel'

  responses:
    Created: #201
      description: The request succeeded and created a new experience
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
            required:
              - id
    NoContentUpdate: #204
      description: The request succeeded and updated an existing experience
    NoContentDelete: #204
      description: The request finished processing and the experience was removed or did not exist
    NotFound: #404
      description: The requested experience was not found
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Could not find an experience with the specified id.
            required:
              - message

    InternalServerError: #500
      description: The server encountered an unexpected condition which prevented it from fulfilling the request.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: An error occurred saving the experience.
            required:
              - message
